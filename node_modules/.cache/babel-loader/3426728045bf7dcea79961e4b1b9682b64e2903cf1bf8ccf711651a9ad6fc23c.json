{"ast":null,"code":"var _jsxFileName = \"/Users/davidjaehrling/Desktop/Bachelor/JS-WebApp/from_scratch/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport './App.css';\nimport * as poseDetection from '@tensorflow-models/pose-detection';\nimport * as tf from '@tensorflow/tfjs-core';\n// Register one of the TF.js backends.\nimport '@tensorflow/tfjs-backend-webgl';\nimport { classify, drawKeypoints, drawSkeleton } from \"./utilities\";\n//import mp3 from \"./mp3\"\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  let lastTrueTime = Date.now();\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const soundContext = require.context('./mp3', true, /\\.mp3$/);\n  const sounds = soundContext.keys().reduce((sounds, soundFile) => {\n    sounds[soundFile] = soundContext(soundFile);\n    return sounds;\n  }, {});\n  const soundFiles = ['./straight.mp3', './legs_apart.mp3', './legs_bend.mp3', './elbows_bend.mp3', './sholders_bend.mp3', './hips_bend.mp3', './hollowback.mp3'];\n\n  // Load MoveNet\n  function play_sound(label) {\n    new Audio(sounds[soundFiles[label.findIndex(x => x === 1)]]).play();\n  }\n  const runMoveNet = async () => {\n    const detectorConfig = {\n      modelType: poseDetection.movenet.modelType.SINGLEPOSE_THUNDER\n    };\n    const net = await poseDetection.createDetector(poseDetection.SupportedModels.MoveNet, detectorConfig);\n    //\n    setInterval(() => {\n      detect(net);\n    }, 100);\n  };\n  const detect = async net => {\n    if (typeof videoRef.current !== \"undefined\" && videoRef.current !== null) {\n      // Get Video Properties\n      const video = videoRef.current;\n      const videoWidth = videoRef.current.videoWidth;\n      const videoHeight = videoRef.current.videoHeight;\n\n      // Set video width\n      videoRef.current.width = videoWidth;\n      videoRef.current.height = videoHeight;\n\n      // Make Detections\n      const pose = await net.estimatePoses(video);\n      console.log(pose[0][\"keypoints\"].every(keypoint => keypoint.score > 0.1));\n      //Check if whole body is visible\n      let k = pose[0][\"keypoints\"];\n      if (pose[0][\"keypoints\"].every(keypoint => keypoint.score > 0.1)) {\n        if (k[16].y < k[6].y || k[15].y < k[5].y) {\n          const label = classify(pose[0][\"keypoints\"]);\n          console.log(lastTrueTime);\n          if (Date.now() - lastTrueTime > 3000) {\n            // Your code to be executed every 3 seconds\n            //console.log(\"condition is true\");\n            lastTrueTime = Date.now();\n            play_sound(label);\n          }\n        }\n      }\n      console.log(label);\n      drawCanvas(pose[0], video, videoWidth, videoHeight, canvasRef);\n    }\n  };\n  const drawCanvas = (pose, video, videoWidth, videoHeight, canvas) => {\n    const ctx = canvas.current.getContext(\"2d\");\n    canvas.current.width = videoWidth;\n    canvas.current.height = videoHeight;\n    drawKeypoints(pose[\"keypoints\"], 0.3, ctx);\n    drawSkeleton(pose[\"keypoints\"], 0.3, ctx);\n  };\n  const getVideo = () => {\n    navigator.mediaDevices.getUserMedia({\n      video: {\n        facingMode: \"user\",\n        width: 480,\n        height: 640\n      }\n    }).then(stream => {\n      let video = videoRef.current;\n      video.srcObject = stream;\n      video.play();\n      console.log(video);\n    }).catch(err => {\n      console.error(err);\n    });\n  };\n  useEffect(() => {\n    getVideo();\n    runMoveNet();\n  }, [videoRef]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"camera\",\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        ref: videoRef,\n        style: {\n          position: \"absolute\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          left: 0,\n          right: 0,\n          textAlign: \"center\",\n          zindex: 9,\n          width: 480,\n          height: 640\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        style: {\n          position: \"absolute\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          left: 0,\n          right: 0,\n          textAlign: \"center\",\n          zindex: 9,\n          width: 480,\n          height: 640\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"0gwqVvoOV2or9Ql4L8GH2BGn3hc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","useEffect","useState","poseDetection","tf","classify","drawKeypoints","drawSkeleton","App","lastTrueTime","Date","now","videoRef","canvasRef","soundContext","require","context","sounds","keys","reduce","soundFile","soundFiles","play_sound","label","Audio","findIndex","x","play","runMoveNet","detectorConfig","modelType","movenet","SINGLEPOSE_THUNDER","net","createDetector","SupportedModels","MoveNet","setInterval","detect","current","video","videoWidth","videoHeight","width","height","pose","estimatePoses","console","log","every","keypoint","score","k","y","drawCanvas","canvas","ctx","getContext","getVideo","navigator","mediaDevices","getUserMedia","facingMode","then","stream","srcObject","catch","err","error","position","marginLeft","marginRight","left","right","textAlign","zindex"],"sources":["/Users/davidjaehrling/Desktop/Bachelor/JS-WebApp/from_scratch/src/App.js"],"sourcesContent":["import React,{useRef, useEffect,useState} from 'react';\nimport './App.css';\nimport * as poseDetection from '@tensorflow-models/pose-detection';\nimport * as tf from '@tensorflow/tfjs-core';\n// Register one of the TF.js backends.\nimport '@tensorflow/tfjs-backend-webgl';\nimport { classify, drawKeypoints, drawSkeleton } from \"./utilities\";\n//import mp3 from \"./mp3\"\n\n\nfunction App() {\n  let lastTrueTime = Date.now();\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const soundContext = require.context('./mp3', true, /\\.mp3$/);\n  const sounds = soundContext.keys().reduce((sounds, soundFile) => {\n    sounds[soundFile] = soundContext(soundFile);\n    return sounds;\n  }, {});\n\n  const soundFiles = [\n    './straight.mp3',\n    './legs_apart.mp3',\n    './legs_bend.mp3',\n    './elbows_bend.mp3',\n    './sholders_bend.mp3',\n    './hips_bend.mp3',\n    './hollowback.mp3'\n  ];\n\n  // Load MoveNet\n  function play_sound(label){\n    \n    new Audio(sounds[soundFiles[label.findIndex(x => x === 1)]]).play()\n  }\n\n\n  const runMoveNet = async () => {\n    const detectorConfig = {modelType: poseDetection.movenet.modelType.SINGLEPOSE_THUNDER};\n    const net = await poseDetection.createDetector(poseDetection.SupportedModels.MoveNet, detectorConfig);\n    //\n    setInterval(() => {\n      detect(net);\n    }, 100);\n  };\n\n  \n\n\n  const detect = async (net) => {\n    if (\n      typeof videoRef.current !== \"undefined\" &&\n      videoRef.current !== null\n    ) {\n      // Get Video Properties\n      const video = videoRef.current;\n      const videoWidth = videoRef.current.videoWidth;\n      const videoHeight = videoRef.current.videoHeight;\n\n      // Set video width\n      videoRef.current.width = videoWidth;\n      videoRef.current.height = videoHeight;\n      \n      // Make Detections\n      const pose = await net.estimatePoses(video);\n      console.log(pose[0][\"keypoints\"].every(keypoint => keypoint.score > 0.1));\n      //Check if whole body is visible\n      let k = pose[0][\"keypoints\"]\n\n      if (pose[0][\"keypoints\"].every(keypoint => keypoint.score > 0.1)){\n        if (k[16].y<k[6].y || k[15].y<k[5].y){\n          const label = classify(pose[0][\"keypoints\"]);\n          console.log(lastTrueTime);\n          if (Date.now() - lastTrueTime > 3000) {\n            // Your code to be executed every 3 seconds\n            //console.log(\"condition is true\");\n            lastTrueTime = Date.now();\n            play_sound(label);\n          }\n        }\n        \n        \n      }\n      \n\n      console.log(label)\n      \n\n      drawCanvas(pose[0], video, videoWidth, videoHeight, canvasRef);\n    }\n  };\n\n  const drawCanvas = (pose, video, videoWidth, videoHeight, canvas) => {\n    const ctx = canvas.current.getContext(\"2d\");\n    canvas.current.width = videoWidth;\n    canvas.current.height = videoHeight;\n\n\n    drawKeypoints(pose[\"keypoints\"], 0.3, ctx);\n    drawSkeleton(pose[\"keypoints\"], 0.3, ctx);\n  };\n\n\n  const getVideo = () => {\n    navigator.mediaDevices\n      .getUserMedia({ \n        video: {facingMode: \"user\", width: 480, height: 640 }\n      }).then(stream => {\n        let video = videoRef.current;\n        video.srcObject = stream;\n        video.play();\n        console.log(video)\n      })\n      .catch(err => {\n        console.error(err);\n      })\n  }\n\n  useEffect(() => {\n    getVideo();\n    runMoveNet();\n\n  }, [videoRef])\n\n  \n\n\n  return (\n    <div className=\"App\">\n      <div className=\"camera\">\n        <video\n          ref={videoRef}\n          style={{\n            position: \"absolute\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            left: 0,\n            right: 0,\n            textAlign: \"center\",\n            zindex: 9,\n            width: 480,\n            height: 640,\n          }}\n        />\n\n        <canvas\n          ref={canvasRef}\n          style={{\n            position: \"absolute\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            left: 0,\n            right: 0,\n            textAlign: \"center\",\n            zindex: 9,\n            width: 480,\n            height: 640,\n          }}\n        />\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,MAAM,EAAEC,SAAS,EAACC,QAAQ,QAAO,OAAO;AACtD,OAAO,WAAW;AAClB,OAAO,KAAKC,aAAa,MAAM,mCAAmC;AAClE,OAAO,KAAKC,EAAE,MAAM,uBAAuB;AAC3C;AACA,OAAO,gCAAgC;AACvC,SAASC,QAAQ,EAAEC,aAAa,EAAEC,YAAY,QAAQ,aAAa;AACnE;AAAA;AAGA,SAASC,GAAG,GAAG;EAAA;EACb,IAAIC,YAAY,GAAGC,IAAI,CAACC,GAAG,EAAE;EAC7B,MAAMC,QAAQ,GAAGZ,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAMa,SAAS,GAAGb,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAMc,YAAY,GAAGC,OAAO,CAACC,OAAO,CAAC,OAAO,EAAE,IAAI,EAAE,QAAQ,CAAC;EAC7D,MAAMC,MAAM,GAAGH,YAAY,CAACI,IAAI,EAAE,CAACC,MAAM,CAAC,CAACF,MAAM,EAAEG,SAAS,KAAK;IAC/DH,MAAM,CAACG,SAAS,CAAC,GAAGN,YAAY,CAACM,SAAS,CAAC;IAC3C,OAAOH,MAAM;EACf,CAAC,EAAE,CAAC,CAAC,CAAC;EAEN,MAAMI,UAAU,GAAG,CACjB,gBAAgB,EAChB,kBAAkB,EAClB,iBAAiB,EACjB,mBAAmB,EACnB,qBAAqB,EACrB,iBAAiB,EACjB,kBAAkB,CACnB;;EAED;EACA,SAASC,UAAU,CAACC,KAAK,EAAC;IAExB,IAAIC,KAAK,CAACP,MAAM,CAACI,UAAU,CAACE,KAAK,CAACE,SAAS,CAACC,CAAC,IAAIA,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAACC,IAAI,EAAE;EACrE;EAGA,MAAMC,UAAU,GAAG,YAAY;IAC7B,MAAMC,cAAc,GAAG;MAACC,SAAS,EAAE3B,aAAa,CAAC4B,OAAO,CAACD,SAAS,CAACE;IAAkB,CAAC;IACtF,MAAMC,GAAG,GAAG,MAAM9B,aAAa,CAAC+B,cAAc,CAAC/B,aAAa,CAACgC,eAAe,CAACC,OAAO,EAAEP,cAAc,CAAC;IACrG;IACAQ,WAAW,CAAC,MAAM;MAChBC,MAAM,CAACL,GAAG,CAAC;IACb,CAAC,EAAE,GAAG,CAAC;EACT,CAAC;EAKD,MAAMK,MAAM,GAAG,MAAOL,GAAG,IAAK;IAC5B,IACE,OAAOrB,QAAQ,CAAC2B,OAAO,KAAK,WAAW,IACvC3B,QAAQ,CAAC2B,OAAO,KAAK,IAAI,EACzB;MACA;MACA,MAAMC,KAAK,GAAG5B,QAAQ,CAAC2B,OAAO;MAC9B,MAAME,UAAU,GAAG7B,QAAQ,CAAC2B,OAAO,CAACE,UAAU;MAC9C,MAAMC,WAAW,GAAG9B,QAAQ,CAAC2B,OAAO,CAACG,WAAW;;MAEhD;MACA9B,QAAQ,CAAC2B,OAAO,CAACI,KAAK,GAAGF,UAAU;MACnC7B,QAAQ,CAAC2B,OAAO,CAACK,MAAM,GAAGF,WAAW;;MAErC;MACA,MAAMG,IAAI,GAAG,MAAMZ,GAAG,CAACa,aAAa,CAACN,KAAK,CAAC;MAC3CO,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAACI,KAAK,CAACC,QAAQ,IAAIA,QAAQ,CAACC,KAAK,GAAG,GAAG,CAAC,CAAC;MACzE;MACA,IAAIC,CAAC,GAAGP,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;MAE5B,IAAIA,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAACI,KAAK,CAACC,QAAQ,IAAIA,QAAQ,CAACC,KAAK,GAAG,GAAG,CAAC,EAAC;QAC/D,IAAIC,CAAC,CAAC,EAAE,CAAC,CAACC,CAAC,GAACD,CAAC,CAAC,CAAC,CAAC,CAACC,CAAC,IAAID,CAAC,CAAC,EAAE,CAAC,CAACC,CAAC,GAACD,CAAC,CAAC,CAAC,CAAC,CAACC,CAAC,EAAC;UACnC,MAAM9B,KAAK,GAAGlB,QAAQ,CAACwC,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;UAC5CE,OAAO,CAACC,GAAG,CAACvC,YAAY,CAAC;UACzB,IAAIC,IAAI,CAACC,GAAG,EAAE,GAAGF,YAAY,GAAG,IAAI,EAAE;YACpC;YACA;YACAA,YAAY,GAAGC,IAAI,CAACC,GAAG,EAAE;YACzBW,UAAU,CAACC,KAAK,CAAC;UACnB;QACF;MAGF;MAGAwB,OAAO,CAACC,GAAG,CAACzB,KAAK,CAAC;MAGlB+B,UAAU,CAACT,IAAI,CAAC,CAAC,CAAC,EAAEL,KAAK,EAAEC,UAAU,EAAEC,WAAW,EAAE7B,SAAS,CAAC;IAChE;EACF,CAAC;EAED,MAAMyC,UAAU,GAAG,CAACT,IAAI,EAAEL,KAAK,EAAEC,UAAU,EAAEC,WAAW,EAAEa,MAAM,KAAK;IACnE,MAAMC,GAAG,GAAGD,MAAM,CAAChB,OAAO,CAACkB,UAAU,CAAC,IAAI,CAAC;IAC3CF,MAAM,CAAChB,OAAO,CAACI,KAAK,GAAGF,UAAU;IACjCc,MAAM,CAAChB,OAAO,CAACK,MAAM,GAAGF,WAAW;IAGnCpC,aAAa,CAACuC,IAAI,CAAC,WAAW,CAAC,EAAE,GAAG,EAAEW,GAAG,CAAC;IAC1CjD,YAAY,CAACsC,IAAI,CAAC,WAAW,CAAC,EAAE,GAAG,EAAEW,GAAG,CAAC;EAC3C,CAAC;EAGD,MAAME,QAAQ,GAAG,MAAM;IACrBC,SAAS,CAACC,YAAY,CACnBC,YAAY,CAAC;MACZrB,KAAK,EAAE;QAACsB,UAAU,EAAE,MAAM;QAAEnB,KAAK,EAAE,GAAG;QAAEC,MAAM,EAAE;MAAI;IACtD,CAAC,CAAC,CAACmB,IAAI,CAACC,MAAM,IAAI;MAChB,IAAIxB,KAAK,GAAG5B,QAAQ,CAAC2B,OAAO;MAC5BC,KAAK,CAACyB,SAAS,GAAGD,MAAM;MACxBxB,KAAK,CAACb,IAAI,EAAE;MACZoB,OAAO,CAACC,GAAG,CAACR,KAAK,CAAC;IACpB,CAAC,CAAC,CACD0B,KAAK,CAACC,GAAG,IAAI;MACZpB,OAAO,CAACqB,KAAK,CAACD,GAAG,CAAC;IACpB,CAAC,CAAC;EACN,CAAC;EAEDlE,SAAS,CAAC,MAAM;IACdyD,QAAQ,EAAE;IACV9B,UAAU,EAAE;EAEd,CAAC,EAAE,CAAChB,QAAQ,CAAC,CAAC;EAKd,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,uBAClB;MAAK,SAAS,EAAC,QAAQ;MAAA,wBACrB;QACE,GAAG,EAAEA,QAAS;QACd,KAAK,EAAE;UACLyD,QAAQ,EAAE,UAAU;UACpBC,UAAU,EAAE,MAAM;UAClBC,WAAW,EAAE,MAAM;UACnBC,IAAI,EAAE,CAAC;UACPC,KAAK,EAAE,CAAC;UACRC,SAAS,EAAE,QAAQ;UACnBC,MAAM,EAAE,CAAC;UACThC,KAAK,EAAE,GAAG;UACVC,MAAM,EAAE;QACV;MAAE;QAAA;QAAA;QAAA;MAAA,QACF,eAEF;QACE,GAAG,EAAE/B,SAAU;QACf,KAAK,EAAE;UACLwD,QAAQ,EAAE,UAAU;UACpBC,UAAU,EAAE,MAAM;UAClBC,WAAW,EAAE,MAAM;UACnBC,IAAI,EAAE,CAAC;UACPC,KAAK,EAAE,CAAC;UACRC,SAAS,EAAE,QAAQ;UACnBC,MAAM,EAAE,CAAC;UACThC,KAAK,EAAE,GAAG;UACVC,MAAM,EAAE;QACV;MAAE;QAAA;QAAA;QAAA;MAAA,QACF;IAAA;MAAA;MAAA;MAAA;IAAA;EAEE;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,GAzJQpC,GAAG;AAAA,KAAHA,GAAG;AA2JZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}